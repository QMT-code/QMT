{"SurveyEntry":{"SurveyID":"SV_3gQNvVFfkTieNim","SurveyName":"Downloadable QMT (Ready-to-Use Survey)","SurveyDescription":null,"SurveyOwnerID":"UR_4YgJeO8X9cMtYuF","SurveyBrandID":"utah","DivisionID":"DV_ezIfiGmUcZ4Vb81","SurveyLanguage":"EN","SurveyActiveResponseSet":"RS_dmrSZhT6yjHuWEe","SurveyStatus":"Inactive","SurveyStartDate":"0000-00-00 00:00:00","SurveyExpirationDate":"0000-00-00 00:00:00","SurveyCreationDate":"2025-09-11 13:42:21","CreatorID":"UR_4YgJeO8X9cMtYuF","LastModified":"2025-09-11 13:42:32","LastAccessed":"0000-00-00 00:00:00","LastActivated":"0000-00-00 00:00:00","Deleted":null},"SurveyElements":[{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"BL","PrimaryAttribute":"Survey Blocks","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"1":{"Type":"Trash","Description":"Trash \/ Unused Questions","ID":"BL_d54scwzsJyrHEEZ","BlockElements":[]},"6":{"Type":"Standard","SubType":"","Description":"Mouse-Tracking Block","ID":"BL_86YNdTZLW1tt7DM","BlockElements":[{"Type":"Question","QuestionID":"QID39"},{"Type":"Page Break"},{"Type":"Question","QuestionID":"QID35"}],"Options":{"BlockLocking":"false","RandomizeQuestions":"false","Looping":"None","LoopingOptions":null,"BlockVisibility":"Expanded"}}}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"FL","PrimaryAttribute":"Survey Flow","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"Type":"Root","FlowID":"FL_1","Flow":[{"Type":"EmbeddedData","FlowID":"FL_14","EmbeddedData":[{"Description":"RECOMMENDED USAGE: DO NOT ALTER ANY OF THE VARIABLE NAMES OR SETTINGS IN THIS SECTION","Type":"Recipient","Field":"RECOMMENDED USAGE: DO NOT ALTER ANY OF THE VARIABLE NAMES OR SETTINGS IN THIS SECTION","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"timeList","Type":"Recipient","Field":"timeList","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"regionList","Type":"Recipient","Field":"regionList","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"mainSequence","Type":"Recipient","Field":"mainSequence","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"period","Type":"Custom","Field":"period","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"1"},{"Description":"delayInMs","Type":"Custom","Field":"delayInMs","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"25"}]},{"Type":"EmbeddedData","FlowID":"FL_23","EmbeddedData":[{"Description":"RECOMMENDED USAGE: TOGGLE THIS AS [0 | 1]","Type":"Recipient","Field":"RECOMMENDED USAGE: TOGGLE THIS AS [0 | 1]","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"debugMode","Type":"Custom","Field":"debugMode","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"1"}]},{"Type":"EmbeddedData","FlowID":"FL_24","EmbeddedData":[{"Description":"RECOMMENDED USAGE: SET NUMBER OF ROWS AND COLUMNS FOR MOUSE-TRACKED CELLS","Type":"Recipient","Field":"RECOMMENDED USAGE: SET NUMBER OF ROWS AND COLUMNS FOR MOUSE-TRACKED CELLS","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"rows","Type":"Custom","Field":"rows","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"2"},{"Description":"cols","Type":"Custom","Field":"cols","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"2"}]},{"Type":"EmbeddedData","FlowID":"FL_47","EmbeddedData":[{"Description":"RECOMMENDED USAGE: TOGGLE ([0, 1]) IF YOU WANT TITLES TO THE LEFT OF THE TABLE (titleLeft = 1) AND\/OR TITLES ABOVE THE TABLE (titleTop = 1).","Type":"Recipient","Field":"RECOMMENDED USAGE: TOGGLE ([0, 1]) IF YOU WANT TITLES TO THE LEFT OF THE TABLE (titleLeft = 1) AND\/OR TITLES ABOVE THE TABLE (titleTop = 1).","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"titleLeft","Type":"Custom","Field":"titleLeft","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"0"},{"Description":"titleTop","Type":"Custom","Field":"titleTop","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"1"}]},{"Type":"EmbeddedData","FlowID":"FL_45","EmbeddedData":[{"Description":"RECOMMENDED USAGE: SET TO PREFERRED DIMENSIONS (IN px) FOR THE NON-MOUSE-TRACKED TITLES","Type":"Recipient","Field":"RECOMMENDED USAGE: SET TO PREFERRED DIMENSIONS (IN px) FOR THE NON-MOUSE-TRACKED TITLES","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"titleWidth","Type":"Custom","Field":"titleWidth","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"220"},{"Description":"titleHeight","Type":"Custom","Field":"titleHeight","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"70"},{"Description":"titleHorizontalSpacing","Type":"Custom","Field":"titleHorizontalSpacing","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"10"},{"Description":"titleVerticalSpacing","Type":"Custom","Field":"titleVerticalSpacing","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"10"}]},{"Type":"EmbeddedData","FlowID":"FL_48","EmbeddedData":[{"Description":"RECOMMENDED USAGE: UPDATE THESE TITLE CONTENTS FOR EACH TIME PERIOD (t) IN STUDY, FOLLOWING FORMAT \"pt_titleLeft\" WHERE YOU WILL HAVE t DIFFERENT VARIABLES OF THIS FORMAT. CONTENTS ARE DELIMITED BY \"***\" AND MAP TO REGIONS BASED ON THE DELIMITED INDEX (E.G., \"this *** is *** a *** test***\" REFLECTS [this, is, a, test], CORRESPONDING TO REGIONS 1-4)","Type":"Recipient","Field":"RECOMMENDED USAGE: UPDATE THESE TITLE CONTENTS FOR EACH TIME PERIOD (t) IN STUDY, FOLLOWING FORMAT \"pt_titleLeft\" WHERE YOU WILL HAVE t DIFFERENT VARIABLES OF THIS FORMAT. CONTENTS ARE DELIMITED BY \"***\" AND MAP TO REGIONS BASED ON THE DELIMITED INDEX (E.G., \"this *** is *** a *** test***\" REFLECTS [this, is, a, test], CORRESPONDING TO REGIONS 1-4)","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"p1_titleLeft","Type":"Recipient","Field":"p1_titleLeft","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"p1_titleTop","Type":"Custom","Field":"p1_titleTop","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"Left Column***Right Column"},{"Description":"p2_titleLeft","Type":"Recipient","Field":"p2_titleLeft","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"p2_titleTop","Type":"Recipient","Field":"p2_titleTop","VariableType":"String","DataVisibility":[],"AnalyzeText":false}]},{"Type":"EmbeddedData","FlowID":"FL_11","EmbeddedData":[{"Description":"RECOMMENDED USAGE: SET TO PREFERRED DIMENSIONS (IN px) FOR THE MAIN MOUSE-TRACKED MATRIX","Type":"Recipient","Field":"RECOMMENDED USAGE: SET TO PREFERRED DIMENSIONS (IN px) FOR THE MAIN MOUSE-TRACKED MATRIX","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"boxWidth","Type":"Custom","Field":"boxWidth","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"220"},{"Description":"boxHeight","Type":"Custom","Field":"boxHeight","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"220"},{"Description":"horizontalSpacing","Type":"Custom","Field":"horizontalSpacing","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"20"},{"Description":"verticalSpacing","Type":"Custom","Field":"verticalSpacing","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"20"}]},{"Type":"EmbeddedData","FlowID":"FL_44","EmbeddedData":[{"Description":"RECOMMENDED USAGE: UPDATE THESE MOUSE-TRACKED MATRIX CONTENTS FOR EACH TIME PERIOD (t) IN STUDY, FOLLOWING FORMAT \"pt_hidden\" WHERE YOU WILL HAVE t DIFFERENT VARIABLES OF THIS FORMAT. CONTENTS ARE DELIMITED BY \"***\" AND MAP TO REGIONS BASED ON THE DELIMITED INDEX (E.G., \"this *** is *** a *** test***\" REFLECTS [this, is, a, test], CORRESPONDING TO REGIONS 1-4)","Type":"Recipient","Field":"RECOMMENDED USAGE: UPDATE THESE MOUSE-TRACKED MATRIX CONTENTS FOR EACH TIME PERIOD (t) IN STUDY, FOLLOWING FORMAT \"pt_hidden\" WHERE YOU WILL HAVE t DIFFERENT VARIABLES OF THIS FORMAT. CONTENTS ARE DELIMITED BY \"***\" AND MAP TO REGIONS BASED ON THE DELIMITED INDEX (E.G., \"this *** is *** a *** test***\" REFLECTS [this, is, a, test], CORRESPONDING TO REGIONS 1-4)","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"p1_hidden","Type":"Custom","Field":"p1_hidden","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"This is ROI 1***This is ROI 2***This is ROI 3***This is ROI 4"},{"Description":"p1_revealed","Type":"Custom","Field":"p1_revealed","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"Region 1 Default ***Region 2 Default***Region 3 Default***Region 4 Default***"},{"Description":"p2_hidden","Type":"Recipient","Field":"p2_hidden","VariableType":"String","DataVisibility":[],"AnalyzeText":false},{"Description":"p2_revealed","Type":"Recipient","Field":"p2_revealed","VariableType":"String","DataVisibility":[],"AnalyzeText":false}]},{"Type":"EmbeddedData","FlowID":"FL_32","EmbeddedData":[{"Description":"buttonX","Type":"Custom","Field":"buttonX","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"50"},{"Description":"buttonY","Type":"Custom","Field":"buttonY","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"90"}]},{"Type":"EmbeddedData","FlowID":"FL_49","EmbeddedData":[{"Description":"alignHorizontal","Type":"Custom","Field":"alignHorizontal","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"center"},{"Description":"alignVertical","Type":"Custom","Field":"alignVertical","VariableType":"String","DataVisibility":[],"AnalyzeText":false,"Value":"center"}]},{"Type":"Standard","ID":"BL_86YNdTZLW1tt7DM","FlowID":"FL_15","Autofill":[]},{"Type":"EndSurvey","FlowID":"FL_13"}],"Properties":{"Count":49}}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"PL","PrimaryAttribute":"Preview Link","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"PreviewType":"Brand","PreviewID":"b6aa0536-f7c8-407c-8730-495551ef2218"}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"PROJ","PrimaryAttribute":"CORE","SecondaryAttribute":null,"TertiaryAttribute":"1.1.0","Payload":{"ProjectCategory":"CORE","SchemaVersion":"1.1.0"}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"QC","PrimaryAttribute":"Survey Question Count","SecondaryAttribute":"58","TertiaryAttribute":null,"Payload":null},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"RS","PrimaryAttribute":"RS_dmrSZhT6yjHuWEe","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":null},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"SCO","PrimaryAttribute":"Scoring","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"ScoringCategories":[],"ScoringCategoryGroups":[],"ScoringSummaryCategory":null,"ScoringSummaryAfterQuestions":0,"ScoringSummaryAfterSurvey":0,"DefaultScoringCategory":null,"AutoScoringCategory":null}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"SO","PrimaryAttribute":"Survey Options","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"BackButton":"false","SaveAndContinue":"true","SurveyProtection":"PublicSurvey","BallotBoxStuffingPrevention":"false","NoIndex":"Yes","SecureResponseFiles":"true","SurveyExpiration":"None","SurveyTermination":"DefaultMessage","Header":"","Footer":"","ProgressBarDisplay":"None","PartialData":"+1 week","ValidationMessage":"","PreviousButton":" \u2190 ","NextButton":" \u2192 ","SurveyTitle":"Online Survey Software | Qualtrics Survey Solutions","SkinLibrary":"utah","SkinType":"templated","Skin":{"brandingId":null,"templateId":"*base","overrides":{"colors":{"secondary":"#007ac0"}}},"NewScoring":1,"SurveyMetaDescription":"The most powerful, simple and trusted way to gather experience data. Start your journey to experience management and try a free account today.","CustomStyles":{"customCSS":"\/* Button styling *\/\n.custom-next-button {\n\/* MODIFY THIS BACKGROUND-COLOR WITH YOUR THEME COLOR (\"PRIMARY COLOR\") IN LOOK AND FEEL *\/\n    background-color: #007AC0;\n    color: #FFFFFF !important;\n    padding: 12px 24px;\n    font-size: 16px;\n    font-weight: bold;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n    margin-top: 20px;\n}\n\n\/* Hovering aesthetics *\/\n.custom-next-button:hover {\n    filter: brightness(0.90); \n}\n\n.custom-next-button:active {\n    filter: brightness(0.85);  \n}\n\n\/* Button position *\/\n.button-container {\n    text-align: center;\n    margin-top: 30px;\n}"}}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"SQ","PrimaryAttribute":"QID35","SecondaryAttribute":". \u00a0","TertiaryAttribute":null,"Payload":{"QuestionText":"<span style=\"color: white;\">.<\/span>\n<div id=\"region-container\">&nbsp;<\/div>","QuestionJS":"\/\/ Read lists from embedded data \n\/\/ These three variables MUST be defined in Qualtrics' embedded data; otherwise, mouse-tracking data will not be saved\nvar timeListString = \"${e:\/\/Field\/timeList}\";\nvar regionListString = \"${e:\/\/Field\/regionList}\";\nvar mainSequenceString = \"${e:\/\/Field\/mainSequence}\";\n\n\/\/ Convert to arrays (just sets type to array if empty). \nvar timeList = timeListString ? timeListString.split(\",\") : [];\nvar regionList = regionListString ? regionListString.split(\",\") : [];\nvar mainSequence = mainSequenceString ? mainSequenceString.split(\",\") : [];\n\n\/\/ Global timing tracking (these objects will use used later to keep track of mouse-hover times)\nvar regionStartTimes = {};\nvar showTimeouts = {};\n\n\/\/ Delay variable\n\/\/ This defaults to 0 if delayInMs is not specified in embedded data; however, we strongly recommend using a brief delay (e.g., 25ms)\nvar delayInMs = parseInt(\"${e:\/\/Field\/delayInMs}\") || 0;\n\n\/\/ This is the number that will be appended to the embedded data list contents. It is also used to identify which input string (from embedded data) to use. \n\/\/ In terms of usage, this period variable will be incremented later in the code (in addOnReady).\nvar period = parseInt(\"${e:\/\/Field\/period}\") || 1;\n\n\/\/ This will actually be defined later (it depends on embedded data inputs). The regionConfig object ultimately holds all of the mouse-tracked content, and is used to match the content to the intended regions.\nvar regionConfig = {};\n\n\/\/ Global variables for dimensions (will be set in addOnload)\nvar boxWidth, boxHeight;\n\n\/\/ Global variables for alignment (will be set in addOnload)\nvar alignHorizontal, alignVertical;\n\n\/\/ Function to wrap content with constraints\n\/\/ This little bit is key, because it takes the content and constrains it to a given set of dimensions THAT WILL NOT CHANGE, by creating an invisible div, of fixed dimensions, with specific word wrapping rules\nfunction wrapContent(content) {\n    \/\/ Convert alignment values to CSS\n    var textAlign = alignHorizontal || 'center';\n    var displayFlex = 'display: flex;';\n    var alignItems = 'center'; \/\/ vertical alignment for flexbox\n    var justifyContent = 'center'; \/\/ horizontal alignment for flexbox\n    \n    \/\/ Set horizontal alignment\n    if (alignHorizontal == 'left') justifyContent = 'flex-start';\n    else if (alignHorizontal == 'right') justifyContent = 'flex-end';\n    \n    \/\/ Set vertical alignment\n    if (alignVertical === 'top') alignItems = 'flex-start';\n    else if (alignVertical === 'bottom') alignItems = 'flex-end';\n    \n    \/\/ Note, the static style elements are the same as those we set later...\n    return '<div style=\"height: ' + boxHeight + 'px; width: ' + boxWidth + 'px; overflow: hidden; padding: 5px; box-sizing: border-box; word-wrap: break-word; word-break: break-word; overflow-wrap: break-word; white-space: normal; pointer-events: none; ' + displayFlex + ' align-items: ' + alignItems + '; justify-content: ' + justifyContent + '; text-align: ' + textAlign + ';\">' + content + '<\/div>';\n}\t\n   \n\n\/\/ This bit initializes the HTML with revealedContent from JavaScript\nfunction initializeRegionContent() {\n   Object.keys(regionConfig).forEach(function(regionId) {\n       var element = document.getElementById(regionId);\n       if (element) {\n           element.innerHTML = wrapContent(regionConfig[regionId].revealedContent); \/\/ This will render HTML\n       }\n   });\n}\n\n\/\/ This is the core functionality of the show() functions...\nfunction showRegion(regionId, hiddenContent) {\n   \/\/ Clear any pending show for this region\n   if (showTimeouts[regionId]) {\n       clearTimeout(showTimeouts[regionId]);\n       delete showTimeouts[regionId];\n   }\n\n   \/\/ Delay show() function to stabilize fast mouse movements\n   showTimeouts[regionId] = setTimeout(function() {\n       var element = document.getElementById(regionId);\n       if (!element) return;\n       \n       \/\/ Only show if not already shown\n       if (!regionStartTimes[regionId]) {\n           element.innerHTML = wrapContent(hiddenContent); \/\/ This is the function we wrote before that adds a div\n           regionStartTimes[regionId] = Date.now();\n       }\n       \n       delete showTimeouts[regionId];\n   }, delayInMs);\n}\n\n\n\/\/ This is the core functionality of the hide() functions...\nfunction hideRegion(regionId) {\n   \/\/ Clear any pending show for this region\n   if (showTimeouts[regionId]) {\n       clearTimeout(showTimeouts[regionId]);\n       delete showTimeouts[regionId];\n   }\n   \n   \/\/ Hide immediately - no delay\n   var element = document.getElementById(regionId);\n   if (!element) return;\n   \n   \/\/ Get the revealedContent from config\n   var config = regionConfig[regionId];\n   element.innerHTML = wrapContent(config.revealedContent); \/\/ This is the function we wrote before that adds a div\n   \n   if (regionStartTimes[regionId]) {\n       \/\/ Calculate time spent\n       var timeSpentMs = Date.now() - regionStartTimes[regionId];\n       \/\/ Update sequences\n       timeList.push(\"P\" + period + \"_\" + timeSpentMs);\n       regionList.push(\"P\" + period + \"_\" + config.name);\n       \n       \/\/ Update main sequence - add both region name and time\n       mainSequence.push(\"P\" + period + \"_\" + config.name + \":\" + timeSpentMs);\n       \n       \/\/ Write to the THREE embedded data fields. THESE VARIABLE NAMES MUST ALREADY BE SPECIFIED IN EMBEDDED DATA\n       Qualtrics.SurveyEngine.setEmbeddedData(\"timeList\", timeList.join(\",\"));\n       Qualtrics.SurveyEngine.setEmbeddedData(\"regionList\", regionList.join(\",\"));\n       Qualtrics.SurveyEngine.setEmbeddedData(\"mainSequence\", mainSequence.join(\",\"));\n       \n       \/\/ Clean up\n       delete regionStartTimes[regionId];\n   }\n}\n\n\/* From here down are the Qualtrics timing functions. We will use the addOnload and addOnReady functions. *\/\n\n\n\/\/ Initialize content when page loads\nQualtrics.SurveyEngine.addOnload(function() {\n   \n   \/\/ Get rows and cols from embedded data; otherwise, set defaults\n   var rows = parseInt(\"${e:\/\/Field\/rows}\") || 1;\n   var cols = parseInt(\"${e:\/\/Field\/cols}\") || 2;\n   \n   \/\/ Calculate total number of regions\n   var numRegions = rows * cols;\n   \n   \/\/ Get alignment settings from embedded data (note these global variables are already created above, so we are just setting values)\n   alignHorizontal = \"${e:\/\/Field\/alignHorizontal}\" || \"center\"; \/\/ left, center, or right\n   alignVertical = \"${e:\/\/Field\/alignVertical}\" || \"center\"; \/\/ top, center, or bottom\n   \n   \/\/ Get delimited content strings. If not defined, set to empty string as default\n   var hiddenAllString = Qualtrics.SurveyEngine.getEmbeddedData('p' + period + '_hidden') || \"\";\n   var revealedAllString = Qualtrics.SurveyEngine.getEmbeddedData('p' + period + '_revealed') || \"\";\n   \n   \/\/ Split into arrays using *** as delimiter\n   var hiddenArray = hiddenAllString ? hiddenAllString.split('***') : [];\n   var revealedArray = revealedAllString ? revealedAllString.split('***') : [];\n   \n   \/* This section saves images into the client's cache, so that they will load quickly during the initial mouse-over. It is important that there are not loading delays--particularly systematic loading delays--given we are interested in dwell times within the ROIs *\/\n   \n    \/\/ Image preloading logic - do this first\n    var imagesToPreload = [];\n    \n    \/\/ Scan all content arrays for IMAGE_URL: prefix\n    for (var i = 0; i < Math.min(numRegions, hiddenArray.length); i++) {\n        if (hiddenArray[i] && hiddenArray[i].trim().startsWith('IMAGE_URL:')) {\n            imagesToPreload.push(hiddenArray[i].trim().substring(10));\n        }\n    }\n    \n    for (var i = 0; i < Math.min(numRegions, revealedArray.length); i++) {\n        if (revealedArray[i] && revealedArray[i].trim().startsWith('IMAGE_URL:')) {\n            imagesToPreload.push(revealedArray[i].trim().substring(10));\n        }\n    }\n    \n    \/\/ Preload all found images\n    imagesToPreload.forEach(function(imageUrl) {\n        var img = new Image();\n        img.src = imageUrl;\n        \/\/ The browser will cache these automatically!\n    });\n   \n   \/\/ Get box dimensions from embedded data (otherwise, set to 100 each as default)\n   boxHeight = parseInt(\"${e:\/\/Field\/boxHeight}\") || 100;\n   boxWidth = parseInt(\"${e:\/\/Field\/boxWidth}\") || 100;\n   \n   \/\/ Get cell spacing from embedded data\n   var horizontalSpacing = parseInt(\"${e:\/\/Field\/horizontalSpacing}\") || 10;\n   var verticalSpacing = parseInt(\"${e:\/\/Field\/verticalSpacing}\") || 10;\t\n\n\/\/ Replace the entire container building section with this:\n\n\/\/ Get title parameters from embedded data\nvar titleLeft = parseInt(\"${e:\/\/Field\/titleLeft}\") || 0;\nvar titleTop = parseInt(\"${e:\/\/Field\/titleTop}\") || 0;\nvar titleWidth = parseInt(\"${e:\/\/Field\/titleWidth}\") || 100;\nvar titleHeight = parseInt(\"${e:\/\/Field\/titleHeight}\") || 50;\nvar titleVerticalSpacing = parseInt(\"${e:\/\/Field\/titleVerticalSpacing}\") || 0;\nvar titleHorizontalSpacing = parseInt(\"${e:\/\/Field\/titleHorizontalSpacing}\") || 0;\n\n\/\/ Get delimited title content strings (without _all suffix)\nvar titleLeftAllString = Qualtrics.SurveyEngine.getEmbeddedData('p' + period + '_titleLeft') || \"\";\nvar titleTopAllString = Qualtrics.SurveyEngine.getEmbeddedData('p' + period + '_titleTop') || \"\";\n\n\/\/ Split into arrays using *** as delimiter\nvar titleLeftArray = titleLeftAllString ? titleLeftAllString.split('***') : [];\nvar titleTopArray = titleTopAllString ? titleTopAllString.split('***') : [];\n\n\/* This is where we store all of the HTML that we are building. The HTML will depend on the specified dimensions, styling, contents, and whether or not there are tiles *\/\nvar container = document.getElementById('region-container');\nif (container) {\n   \/\/ Clear any existing content\n   container.innerHTML = '';\n   \n   \/\/ Create a single table with custom spacing\n   var html = '<table style=\"margin: 0 auto; border-collapse: separate; border-spacing: 0;\">';\n   html += '<tbody>';\n   \n   \/\/ Add top title row **if** needed\n   if (titleTop == 1) {\n       html += '<tr>';\n       \n       \/\/ Empty corner cell if left titles are also shown\n       if (titleLeft == 1) {\n           html += '<td style=\"padding: 0; border: none;\"><\/td>';\n       }\n       \n\/\/ Add top title cells for each column\nfor (var col = 0; col < cols; col++) {\n    var topTitleContent = (col < titleTopArray.length && titleTopArray[col]) ? titleTopArray[col].trim() : \"Title \" + (col + 1);\n    \/\/ Process the content through formatContent to handle images\n    var formattedTopTitle = formatContent(topTitleContent, boxWidth + 10, titleHeight);\n    \n    \/\/ Add padding-right for all but last column to simulate border-spacing\n    var paddingRight = (col < cols - 1) ? horizontalSpacing : 0;\n    html += '<td style=\"padding: 0; padding-right: ' + paddingRight + 'px; padding-bottom: ' + titleVerticalSpacing + 'px; border: none; text-align: center;\">';\n    html += '<div style=\"width: ' + (boxWidth + 10) + 'px; height: ' + titleHeight + 'px; display: flex; align-items: ' + \n        (alignVertical === 'top' ? 'flex-start' : alignVertical === 'bottom' ? 'flex-end' : 'center') + \n        '; justify-content: ' + \n        (alignHorizontal === 'left' ? 'flex-start' : alignHorizontal === 'right' ? 'flex-end' : 'center') + \n        '; text-align: ' + alignHorizontal + '; position: relative;\">';\n    html += formattedTopTitle;\n    html += '<\/div>';\n    html += '<\/td>';\n}\n       \n       html += '<\/tr>';\n   }\n   \n   var regionCount = 1;\n   \n   \/\/ Generate rows with content\n   for (var row = 0; row < rows; row++) {\n       html += '<tr>';\n       \n\/\/ Add left title cell for this row **if** needed\nif (titleLeft == 1) {\n    var leftTitleContent = (row < titleLeftArray.length && titleLeftArray[row]) ? titleLeftArray[row].trim() : \"Title \" + (row + 1);\n    \/\/ Process the content through formatContent to handle images\n    var formattedLeftTitle = formatContent(leftTitleContent, titleWidth, boxHeight + 10);\n    \n    \/\/ Add padding-bottom for all but last row to simulate border-spacing\n    var paddingBottom = (row < rows - 1) ? verticalSpacing : 0;\n    html += '<td style=\"padding: 0; padding-right: ' + titleHorizontalSpacing + 'px; padding-bottom: ' + paddingBottom + 'px; border: none; text-align: center;\">';\n    html += '<div style=\"width: ' + titleWidth + 'px; height: ' + (boxHeight + 10) + 'px; display: flex; align-items: ' + \n        (alignVertical === 'top' ? 'flex-start' : alignVertical === 'bottom' ? 'flex-end' : 'center') + \n        '; justify-content: ' + \n        (alignHorizontal === 'left' ? 'flex-start' : alignHorizontal === 'right' ? 'flex-end' : 'center') + \n        '; text-align: ' + alignHorizontal + '; position: relative;\">';\n    html += formattedLeftTitle;\n    html += '<\/div>';\n    html += '<\/td>';\n}\n       \n       \/\/ Generate columns within each row\n       for (var col = 0; col < cols; col++) {\n           if (regionCount <= numRegions) {\n               \/\/ Add padding to simulate border-spacing between grid cells\n               var paddingRight = (col < cols - 1) ? horizontalSpacing : 0;\n               var paddingBottom = (row < rows - 1) ? verticalSpacing : 0;\n               \n               html += '<td style=\"padding: 0; padding-right: ' + paddingRight + 'px; padding-bottom: ' + paddingBottom + 'px; vertical-align: top;\">';\n               \n               \/\/ Mouse-tracked region\n               html += '<div class=\"hover\">';\n               html += '<table border=\"1\" style=\"margin: 0; table-layout: fixed; width: ' + (boxWidth + 10) + 'px;\">';\n               html += '<tbody>';\n               html += '<tr style=\"height: ' + (boxHeight + 10) + 'px;\">';\n               html += '<td id=\"Region' + regionCount + '\" onmouseenter=\"showR' + regionCount + '()\" onmouseleave=\"hideR' + regionCount + '()\" style=\"padding: 0; position: relative;\"><span style=\"pointer-events: none;\">&nbsp;<\/span><\/td>';\n               html += '<\/tr>';\n               html += '<\/tbody>';\n               html += '<\/table>';\n               html += '<\/div>';\n               \n               html += '<\/td>';\n           } else {\n               \/\/ Empty cell if we've exceeded the number of regions\n               html += '<td><\/td>';\n           }\n           regionCount++;\n       }\n       \n       html += '<\/tr>';\n   }\n   \n   html += '<\/tbody>';\n   html += '<\/table>';\n   \n   \/\/ Set the container's innerHTML\n   container.innerHTML = html;\n}\n\n   \/* Now setup the region configuration. Because of how Qualtrics reads embedded data, \n   we will built these regions one at a time (and the total number of objects will depend on numRegions)\n   *\/\n   \n   \/\/ Also, by default we will set keys and name-values to Regionk and Rk, respectively. (This follows the proposed best-practices in the technical guide)\n   \n   \/\/ Finally, in the case of unspecified content, we will leave a reminder for the researcher to ensure the hidden content is properly defined, and we will set the default revealed content to an empty string\n\n\/\/ Helper function to format content as image or text (includes detecting the content type, and also resizing the image, if necessary, to fit in the ROIs)\n\/\/ Note, this content still gets passed to wrapConent... this function is bascially just for content type detection and resizing\nfunction formatContent(content, width, height) {\n   if (content && content.startsWith('IMAGE_URL:')) {\n       \/\/ Extract the URL after IMAGE_URL:\n       var imageUrl = content.substring(10); \/\/ 10 is the length of 'IMAGE_URL:'\n       return '<img src=\"' + imageUrl + '\" style=\"max-width: ' + (width - 10) + 'px; max-height: ' + (height - 10) + 'px; width: auto; height: auto; display: block; margin: auto; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);\">';\n   }\n   return content;\n}\n\n   \/\/ Build regionConfig for all regions up to numRegions\n   for (var i = 1; i <= numRegions; i++) {\n       \/\/ Get content from arrays, with defaults if not enough elements\n       var hiddenContent = (i <= hiddenArray.length && hiddenArray[i-1]) ? hiddenArray[i-1].trim() : \"Remember to update hidden \" + i + \"...\";\n       var revealedContent = (i <= revealedArray.length && revealedArray[i-1]) ? revealedArray[i-1].trim() : \"\";\n       \n       regionConfig[\"Region\" + i] = {\n           name: \"R\" + i,\n           hiddenContent: formatContent(hiddenContent, boxWidth, boxHeight),\n           revealedContent: formatContent(revealedContent, boxWidth, boxHeight)\n       };\n   }\n   \n   \/\/ Setup the dynamic show\/hide functions\n   Object.keys(regionConfig).forEach(function(regionId) {\n       var config = regionConfig[regionId];\n       \n       window[\"show\" + config.name] = function() {\n           showRegion(regionId, config.hiddenContent);\n       };\n       \n       window[\"hide\" + config.name] = function() {\n           hideRegion(regionId);\n       };\n   });\n   \n   \/\/ Initialize the region content from JavaScript\n   initializeRegionContent();\n});\n\nQualtrics.SurveyEngine.addOnReady(function() {\t\n \n   \/\/ When this variable == 1, it triggers the debugger window (debugging script is read in; code is available through our github repository)\n   var debugMode = parseInt(\"${e:\/\/Field\/debugMode}\") || 0;\n   \n   if (debugMode == 1) {\n       var script = document.createElement('script');\n       script.src = 'https:\/\/cdn.jsdelivr.net\/gh\/QMT-code\/QMT\/QMT_debugging.js';\n       document.head.appendChild(script);\t\n   }\t\n   \n   \/\/ Set the new value\n   var nextPeriod = period + 1;\n   Qualtrics.SurveyEngine.setEmbeddedData(\"period\", nextPeriod);\n\n\/\/ Replace the current failsafe code with this:\n\n\/\/ Adding an additional failsafe listener that makes sure information in the table is concealed\nvar allRegionCells = document.querySelectorAll('td[id^=\"Region\"]');\nallRegionCells.forEach(function(td) {\n   td.addEventListener('mouseleave', function() {\n       \/\/ Anytime a mouse leaves a region cell, ensure all regions are hidden\n       Object.keys(regionStartTimes).forEach(function(regionId) {\n           if (regionStartTimes[regionId]) {\n               window[\"hide\" + regionConfig[regionId].name]();\n           }\n       });\n   });\n});\n\n\n});\n\nQualtrics.SurveyEngine.addOnUnload(function() {\n  \n\/\/ We do not need to put anything in this timing function.   \n   \n});","DefaultChoices":false,"DataExportTag":"MOUSE-TRACKING ","QuestionID":"QID35","QuestionType":"DB","Selector":"TB","DataVisibility":{"Private":false,"Hidden":false},"Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":". \u00a0","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"SQ","PrimaryAttribute":"QID39","SecondaryAttribute":"\u2192","TertiaryAttribute":null,"Payload":{"QuestionText":" <div class=\"button-container\" style=\"position: fixed; right: ${e:\/\/Field\/buttonX}%; top: ${e:\/\/Field\/buttonY}%; transform: translateY(-50%); z-index: 1000;\">\n    <button type=\"button\" class=\"custom-next-button\" id=\"customNextBtn\">\n        &rarr;\n    <\/button>\n<\/div>","QuestionJS":"Qualtrics.SurveyEngine.addOnload(function()\n{\n\t\/*Place your JavaScript here to run when the page loads*\/\n\n});\n\nQualtrics.SurveyEngine.addOnReady(function()\n{\n\t\/*Place your JavaScript here to run when the page is fully displayed*\/\n\n this.hideNextButton();\t\n    var that = this;\n    \/\/ Get reference to the custom button (HTML button id must match this!)\n    var customButton = jQuery(\"#customNextBtn\");\n    \n    customButton.on('click', function() {\n        that.clickNextButton();\n    });\n\t\n});\n\nQualtrics.SurveyEngine.addOnUnload(function()\n{\n\t\/*Place your JavaScript here to run when the page is unloaded*\/\n\n});","DefaultChoices":false,"DataExportTag":"CUSTOM NEXT BUTTON ","QuestionID":"QID39","QuestionType":"DB","Selector":"TB","DataVisibility":{"Private":false,"Hidden":false},"Configuration":{"QuestionDescriptionOption":"UseText"},"QuestionDescription":"\u2192","ChoiceOrder":[],"Validation":{"Settings":{"Type":"None"}},"GradingData":[],"Language":[],"NextChoiceId":4,"NextAnswerId":1}},{"SurveyID":"SV_3gQNvVFfkTieNim","Element":"STAT","PrimaryAttribute":"Survey Statistics","SecondaryAttribute":null,"TertiaryAttribute":null,"Payload":{"MobileCompatible":true,"ID":"Survey Statistics"}}]}